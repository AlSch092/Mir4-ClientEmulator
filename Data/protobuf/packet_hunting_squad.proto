syntax = "proto3";

package MirMobile;

import "info_common.proto";

message _hunting_squad_attribute {
    uint32 target_dungeon_index = 1;
    uint32 limit_combat_point = 2;
    uint32 locked_slot_count = 3;
}

message _hunting_squad_member_info {
    uint64 member_uid = 1;
    int32 member_class = 2;
    int32 level = 3;
    string nickname = 4;
    int32 combatpoint = 5;
    string guild_name = 6;
    uint32 guild_mark = 7;
    uint32 guild_mark_edge = 8;
    uint64 guild_uid = 9;
}

message _hunting_squad_member_slot_info {
    uint32 slot_index = 1;
    _hunting_squad_member_info member_info = 2;
    bool is_ready = 3;
    uint32 member_voice_chat_state = 4;
}

message _hunting_squad_info {
    uint64 uid = 1;
    _hunting_squad_attribute hunting_squad_attribute = 2;
    repeated _hunting_squad_member_info hunting_squad_member_list = 3;
    uint64 leader_uid_ = 4;
}

message CLIENT_GAME_CREATE_HUNTING_SQUAD {
    _hunting_squad_attribute hunting_squad_attribute = 1;
}

message GAME_WORLD_CREATE_HUNTING_SQUAD {
    _hunting_squad_attribute hunting_squad_attribute = 1;
    _hunting_squad_member_info create_member_info = 2;
}

message WORLD_GAME_CREATE_HUNTING_SQUAD {
    uint64 hunting_squad_uid = 1;
    _hunting_squad_attribute hunting_squad_attribute = 2;
    uint64 create_user_uid = 3;
}

message SERVER_CLIENT_CREATE_HUNTING_SQUAD_RESULT {
    uint32 create_result = 1;
    uint64 hunting_squad_uid = 2;
    _hunting_squad_attribute hunting_squad_attribute = 3;
}

message CLIENT_GAME_INVITE_HUNTING_SQUAD {
    uint64 invite_user_uid = 1;
}

message GAME_WORLD_INVITE_HUNTING_SQUAD {
    uint64 invite_user_uid = 1;
    uint64 invite_hunting_squad_uid = 2;
    _hunting_squad_member_info request_user_info = 3;
}

message WORLD_GAME_REQUEST_INVITE_AGREE_HUNTING_SQUAD {
    uint64 agree_user_uid = 1;
    uint64 invite_hunting_squad_uid = 2;
    _hunting_squad_member_info request_member_info = 3;
    uint32 target_dungeon_index = 4;
}

message GAME_CLIENT_REQUEST_INVITE_AGREE_HUNTING_SQUAD {
    uint64 invite_hunting_squad_uid = 1;
    _hunting_squad_member_info request_member_info = 2;
}

message CLIENT_GAME_REPLY_INVITE_AGREE_HUNTING_SQUAD {
    uint64 invite_hunting_squad_uid = 1;
    uint64 request_user_uid = 2;
    bool agree_invite = 3;
}

message GAME_WORLD_REPLY_INVITE_AGREE_HUNTING_SQUAD {
    uint64 invite_hunting_squad_uid = 1;
    uint64 request_user_uid = 2;
    bool agree_invite = 3;
    uint64 prev_invite_user_hunting_squad_uid = 4;
    _hunting_squad_member_info invite_member_info = 5;
}

message WORLD_GAME_ENTER_HUNTING_SQUAD {
    uint64 enter_user_uid = 1;
    uint64 enter_hunting_squad_uid = 2;
    int32 enter_member_slot_index = 3;
    _hunting_squad_attribute enter_hunting_squad_attribute = 4;
    repeated _hunting_squad_member_slot_info member_info_list = 5;
    uint64 leader_uid = 6;
}

message GAME_CLIENT_ENTER_HUNTING_SQUAD {
    uint64 enter_hunting_squad_uid = 1;
    int32 enter_member_slot_index = 2;
    _hunting_squad_attribute enter_hunting_squad_attribute = 3;
    repeated _hunting_squad_member_slot_info member_info_list = 4;
    uint64 leader_uid = 5;
}

message WORLD_CLIENT_JOIN_HUNTING_SQUAD_MEMBER {
    _hunting_squad_member_slot_info join_member_info = 1;
}

message WORLD_CLIENT_LEAVE_HUNTING_SQUAD_MEMBER {
    uint64 leave_member_uid = 1;
    uint32 leave_reason = 2;
    uint64 leader_uid = 3;
}

message CLIENT_GAME_REQUEST_ENTER_HUNTING_SQUAD {
    uint64 request_enter_hunting_squad_uid = 1;
}

message GAME_WORLD_REQUEST_ENTER_HUNTING_SQUAD {
    uint64 request_enter_hunting_squad_uid = 1;
    _hunting_squad_member_info request_enter_member_info = 2;
    uint64 prev_joined_hunting_squad_uid = 3;
}

message GAME_WORLD_REQUEST_HUNTING_SQUAD_INFO_FOR_REQUEST_ENTER {
    uint64 request_enter_hunting_squad_uid = 1;
}

message WORLD_GAME_HUNTING_SQUAD_INFO_FOR_REQUEST_ENTER {
    uint64 request_enter_user_uid = 1;
    uint64 request_enter_hunting_squad_uid = 2;
    _hunting_squad_attribute request_enter_hunting_squad_attribute = 3;
}

message SERVER_CLIENT_INVITE_ERROR {
    uint32 error_id = 1;
    string invite_user_name = 3;
}

message SERVER_CLIENT_REQUEST_ENTER_ERROR {
    uint32 error_id = 1;
}

message GAME_WORLD_HUNTING_SQUAD_INVITE_ERROR {
    uint64 request_user_uid = 1;
    uint32 error_id = 2;
    string invite_user_name = 3;
}

message WORLD_GAME_LEAVE_HUNTING_SQUAD {
    uint64 leave_user_uid = 1;
    uint32 leave_reason = 2;
}

message GAME_CLIENT_LEAVE_HUNTING_SQUAD {
    uint32 leave_reason = 1;
}

message CLIENT_GAME_REQUEST_LEAVE_HUNTING_SQUAD {
    
}

message GAME_WORLD_REQUEST_LEAVE_HUNTING_SQUAD {
    uint64 leave_hunting_squad_uid = 1;
}

message CLIENT_WORLD_LOCK_SLOT {
    uint64 hunting_squad_uid = 1;
}

message CLIENT_WORLD_UNLOCK_SLOT {
    uint64 hunting_squad_uid = 1;
}

message WORLD_CLIENT_NOTIFY_MEMBER_SLOT_LOCK {
    uint32 slot_lock_count = 1;
}

message CLIENT_WORLD_REQUEST_KICK_USER {
    uint64 hunting_squad_uid = 1;
    uint64 kick_user_uid = 2;
}

message CLIENT_WORLD_HUNTING_SQUAD_LIST {
    uint32 dungeon_index = 1;
}

message WORLD_CLIENT_HUNTING_SQUAD_LIST {
    repeated _hunting_squad_info hunting_squad_list = 1;
}

message CLIENT_WORLD_HUNTING_SQUAD_NOTIFY_READY {
    bool is_ready = 1;
    uint64 hunting_squad_uid = 2;
}

message WORLD_CLIENT_HUNTING_SQUAD_NOTIFY_CHANGE_READY {
    uint64 change_user_uid = 1;
    bool is_ready = 2;
}

message GAME_CLIENT_SYNC_HUNTING_SQUAD_MEMBER_INFO {
    uint64 member_uid = 1;
    uint32 hp = 2;
    uint32 max_hp = 3;
    _vector3 pos = 4;
}

message GAME_WORLD_REQUEST_USER_HUNTING_SQUAD_INFO {
    
}

message WORLD_GAME_USER_HUNTING_SQUAD_INFO {
    uint64 request_user_uid = 1;
    uint64 hunting_squad_uid = 2;
    _hunting_squad_attribute hunting_squad_attribute = 3;
    repeated _hunting_squad_member_slot_info member_info_list = 4;
    uint64 leader_uid = 5;
}

message GAME_CLIENT_USER_HUNTING_SQUAD_INFO {
    uint64 hunting_squad_uid = 1;
    _hunting_squad_attribute hunting_squad_attribute = 2;
    repeated _hunting_squad_member_slot_info member_info_list = 3;
    uint64 leader_uid = 4;
}

message WORLD_GAME_NOTIFY_CHANGE_HUNTING_SQUAD_LEADER {
    uint64 member_uid = 1;
    uint64 leader_uid = 2;
}

message CLIENT_WORLD_REQUEST_RECOMMEND_HUNTING_SQUAD_LIST {
    repeated uint32 recommend_dungeon_index = 1;
}

message WORLD_CLIENT_RECOMMEND_HUNTING_SQUAD_LIST {
    repeated _hunting_squad_info hunting_squad_list = 1;
}

message GAME_CLIENT_HUNTING_SQUAD_MEMBER_ITEM_DROP {
    uint64 member_uid = 1;
    repeated _simple_item_info member_drop_item_list = 2;
}

message WORLD_GAME_NOTIFY_HUNTING_SQUAD_MEMBER_LEAVE {
    uint64 zone_uid = 1;
    uint64 leave_user_uid = 2;
}

message GAME_CLIENT_NOTIFY_DUNGEON_CLEAR_LIST {
    repeated uint32 clear_dungeon_index = 1;
}
